# test_price_db.py
# –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —Ü–µ–Ω

import asyncio
import os
from dotenv import load_dotenv
from database.db import init_db, async_session
from database.models import Price
from sqlalchemy import select

load_dotenv()


async def test_price_operations():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ø—Ä–∞–π—Å–æ–º"""
    print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    await init_db()

    async with async_session() as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å–∏
        result = await session.execute(select(Price))
        existing_prices = result.scalars().all()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–∑–∏—Ü–∏–π –≤ –ø—Ä–∞–π—Å–µ: {len(existing_prices)}")

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é, –µ—Å–ª–∏ –ø—Ä–∞–π—Å –ø—É—Å—Ç
        if not existing_prices:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏...")
            test_prices = [
                Price(
                    title="–ü–æ–∫—Ä–∞—Å–∫–∞ –±–∞–º–ø–µ—Ä–∞",
                    description="–ü–æ–ª–Ω–∞—è –ø–æ–∫—Ä–∞—Å–∫–∞ –ø–µ—Ä–µ–¥–Ω–µ–≥–æ/–∑–∞–¥–Ω–µ–≥–æ –±–∞–º–ø–µ—Ä–∞",
                    price=1500000,  # 15000.00 —Ä—É–± –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                ),
                Price(
                    title="–ü–æ–∫—Ä–∞—Å–∫–∞ –¥–≤–µ—Ä–∏",
                    description="–ü–æ–∫—Ä–∞—Å–∫–∞ –æ–¥–Ω–æ–π –¥–≤–µ—Ä–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è",
                    price=1200000,  # 12000.00 —Ä—É–± –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                ),
                Price(
                    title="–ü–æ–∫—Ä–∞—Å–∫–∞ –∫—Ä—ã–ª–∞",
                    description="–ü–æ–∫—Ä–∞—Å–∫–∞ –ø–µ—Ä–µ–¥–Ω–µ–≥–æ –∏–ª–∏ –∑–∞–¥–Ω–µ–≥–æ –∫—Ä—ã–ª–∞",
                    price=1000000,  # 10000.00 —Ä—É–± –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                ),
            ]

            for price in test_prices:
                session.add(price)

            await session.commit()
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏
        result = await session.execute(select(Price).order_by(Price.id))
        all_prices = result.scalars().all()

        print("\nüìã –¢–µ–∫—É—â–∏–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç:")
        for price in all_prices:
            print(f"  {price.id}. {price.title}")
            print(f"     üí∞ {price.price // 100}.{price.price % 100:02d} —Ä—É–±.")
            print(f"     üìù {price.description}")
            print()


if __name__ == "__main__":
    asyncio.run(test_price_operations())
